/**
 * 和with语句一样，catch语句中的 eval函数中 声明的函数的标识符解析 也没有按照规范来。
 * catch语句不是不对程序的执行结果产生副作用，而是起的副作用有限。
 * 相比于with语句对 绑定对象的所有属性的同名标识符解析进行干扰，catch语句干扰的只有一个identifier标识符解析.
 *
 */

var x=1;
/**
 * 当前执行环境的变量环境组件和词法环境组件env1内容如下:
 * x -> 1
 */
try{
    throw 2;
}catch (x){
    /**
     * 进入catch代码，此时执行环境的词法环境组件为一个新的声明式词法环境env2。其初始化时的内容为
     * x -> 2
     */

    /**
     * 执行eval代码，使用env2作为词法环境组件，env1为变量环境组件
     */
    eval("\n" +
        "    function foo() {\n" +
        "        console.log(x);\n" +  // 函数声明的 x 解析是在 env1上进行 为 1.
        "    }\n" +
        "    \n" +
        "    var bar=function () {\n" +
        "        console.log(x);\n" + // 函数表达式的 x 解析是在 env2上进行 为2.
        "    }");
    foo(); //应该打印1 实际打印2
    bar(); //应该打印2 实际打印2
}
